# coding: utf-8

"""
    Video Insights

    The Video Insights API endpoint

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime

from pydantic import BaseModel, Field, StrictStr

class UserYTLibraryItem(BaseModel):
    """
    UserYTLibraryItem
    """
    duration: StrictStr = Field(...)
    id: StrictStr = Field(...)
    preview: StrictStr = Field(...)
    request_date: datetime = Field(...)
    title: StrictStr = Field(...)
    video_id: StrictStr = Field(...)
    __properties = ["duration", "id", "preview", "request_date", "title", "video_id"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> UserYTLibraryItem:
        """Create an instance of UserYTLibraryItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> UserYTLibraryItem:
        """Create an instance of UserYTLibraryItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return UserYTLibraryItem.parse_obj(obj)

        _obj = UserYTLibraryItem.parse_obj({
            "duration": obj.get("duration"),
            "id": obj.get("id"),
            "preview": obj.get("preview"),
            "request_date": obj.get("request_date"),
            "title": obj.get("title"),
            "video_id": obj.get("video_id")
        })
        return _obj



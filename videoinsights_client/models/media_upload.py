# coding: utf-8

"""
    Video Insights

    The Video Insights API endpoint

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr

class MediaUpload(BaseModel):
    """
    MediaUpload
    """
    file_detail_url: StrictStr = Field(...)
    file_name: StrictStr = Field(...)
    file_uuid: StrictStr = Field(...)
    md5_hash: StrictStr = Field(...)
    __properties = ["file_detail_url", "file_name", "file_uuid", "md5_hash"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> MediaUpload:
        """Create an instance of MediaUpload from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> MediaUpload:
        """Create an instance of MediaUpload from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return MediaUpload.parse_obj(obj)

        _obj = MediaUpload.parse_obj({
            "file_detail_url": obj.get("file_detail_url"),
            "file_name": obj.get("file_name"),
            "file_uuid": obj.get("file_uuid"),
            "md5_hash": obj.get("md5_hash")
        })
        return _obj


